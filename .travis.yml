notifications:
  email: false
git:
  quiet: true
  depth: false
jdk: openjdk8
node_js: lts/*
python: 3.7
services: docker
os: linux
arch: amd64
addons:
  apt:
    update: true
    packages:
      - python3-pip
      - sudo
      - lsof
      - curl
      - jq
install: true
before_install:
  - |
    if [ ! -f ${HOME}/.local/daggerok/bash-functions/master/main.bash ] ; then
      mkdir -p ${HOME}/.local/daggerok/bash-functions/master ;
      curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash > ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
    fi
    source ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
  - stop_any 80 5432 8000 8080
  - export PATH=$HOME/.local/bin:$PATH
  - pip3 install --user --upgrade pip setuptools
  - pip install --user --upgrade httpie docker-compose
jobs:
  include:
    - stage: test
      name: native k8s ingress using k3d k3s traefik
      script:
        - cd $TRAVIS_BUILD_DIR
        #- wget -q -O - https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash
        - curl -s https://raw.githubusercontent.com/rancher/k3d/v1.3.0-dev.0/install.sh | bash
        - k3d create --name k3s --api-port 6551 --publish 80:80 --publish 30000:30000 -w 1 --image rancher/k3s:v0.7.0-rc2
        #
        - cd $TRAVIS_BUILD_DIR && ./mvnw docker:stop docker:remove
        - cd $TRAVIS_BUILD_DIR && ./mvnw
        #- k3d i --name k3s daggerok/k8s-mp-services-learn,daggerok/k8s-mp-services-backend || echo 'oops....'
        - k3d import-images --name k3s daggerok/k8s-mp-services-learn || echo oops....
        #
        - export KUBECONFIG="$(k3d get-kubeconfig --name='k3s')"
        - |
          if [ ! -f ${HOME}/.local/daggerok/kubectl ] ; then
            curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl ;
            mkdir -p ${HOME}/.local/daggerok/ ;
            mv ./kubectl ~/.local/daggerok/ ;
          fi
        - |
          if [ ! -f ${HOME}/.local/bin/kubectl ] ; then
            mkdir -p ${HOME}/.local/bin/ ;
            cp -Rf ${HOME}/.local/daggerok/kubectl ${HOME}/.local/bin/ ;
            chmod +x ${HOME}/.local/bin/kubectl ;
          fi
        - kubectl get pods --all-namespaces -o wide --watch &
        #
        - cd $TRAVIS_BUILD_DIR && kubectl apply -f k8s/ -f k8s/ingress/traefik.yaml
        - sleep 94s
        #
        - kubectl get all
        - http :/
        - http :/learn
        - http :30000/learn
        #
        - cd $TRAVIS_BUILD_DIR && kubectl delete -f k8s/ -f k8s/ingress/  || echo cannot kubectl...
        - k3d stop --name=k3s -a                                          || echo cannot k3d...
        - docker rm -f -v `docker ps -q`                                  || echo cannot docker...
        - cat ~/.config/k3d/k3s/kubeconfig.yaml                           || echo cannot cat...
        - rm -rf ~/.config/k3d/k3s
    - stage: test
      name: learn fabric8
      before_script:
        - docker network create k8s-mp-services || echo network already exists...
        - cd $TRAVIS_BUILD_DIR && ./mvnw
        - cd $TRAVIS_BUILD_DIR && ./mvnw docker:start
      script:
        - http :8000
        - http :8000/learn
      after_script:
        - cd $TRAVIS_BUILD_DIR && ./mvnw docker:stop docker:remove
    - stage: test
      name: learn test
      before_script:
        - cd $TRAVIS_BUILD_DIR && ./mvnw -f learn clean compile quarkus:build
        - java -jar $TRAVIS_BUILD_DIR/learn/target/*-runner.jar &
        - wait_for 8000
      script:
        - http :8000
        - http :8000/learn
      after_script:
        - stop_any 80 8000
    - stage: test
      name: versions
      script: cd $TRAVIS_BUILD_DIR && ./mvnw versions:display-property-updates
cache:
  pip: true
  packages: true
  directories:
    - ~/.m2
    - ~/.docker
    - ~/.local/daggerok
